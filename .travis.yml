jobs:
  include:

#    - stage: Unit Testing
#      language: generic
#      os: linux
#      env: running unit and widget tests with code coverage
#      before_script:
#        - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null
#        - git clone https://github.com/flutter/flutter.git -b beta
#        - export PATH="$PATH":"$HOME/.pub-cache/bin"
#        - export PATH=`pwd`/flutter/bin:`pwd`/flutter/bin/cache/dart-sdk/bin:$PATH
#        - flutter precache
#        - flutter doctor -v
#        - pub global activate coverage
#      script: flutter test --coverage
#      after_success: bash <(curl -s https://codecov.io/bash) -f coverage/lcov.info

    - &integration-test-stage
      stage: Integration Testing
      sudo: true
      dist: trusty
      language: generic
      os: linux
      env:
        - EMULATOR_API_LEVEL=18
        - ANDROID_ABI="default;armeabi-v7a"
      # Run integration tests on android
      before_install:
        - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null
        # Install the Android SDK Dependency.
        - export ANDROID_HOME=/opt/android-sdk-linux
        - cd /opt
        - wget -q https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -O android-sdk-tools.zip
        - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
        - rm android-sdk-tools.zip
        - cd -
        - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
        # Silence warning.
        - mkdir -p ~/.android
        - touch ~/.android/repositories.cfg
        # Accept licenses before installing components, no need to echo y for each component
        - yes | sdkmanager --licenses
        # Platform tools
        - sdkmanager "emulator" "tools" "platform-tools" > /dev/null
        - sdkmanager --list | head -15
        # install older packages (for emulator)
        - sdkmanager "build-tools;25.0.2" "platforms;android-25" > /dev/null
        # Create and start emulator.
#        - EMULATOR_API_LEVEL=21
#        - ANDROID_ABI="default;armeabi-v7a"
        - sdkmanager "system-images;android-$EMULATOR_API_LEVEL;$ANDROID_ABI" > /dev/null
        - sdkmanager --list | head -15
        - echo no | avdmanager create avd --force -n test -k "system-images;android-$EMULATOR_API_LEVEL;$ANDROID_ABI"
        - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader &
        # install flutter
        - git clone https://github.com/flutter/flutter.git -b beta

        # temporary fix for build problem with beta branch (flutter.gradle is accessing repositories in wrong order)
        # a jar file is missing from the first repository and gradle is not finding it in the second repository
        # switching order of repository search to fix
        # (assumes pinned beta version, at some point in future this fix should be removed and beta unpinned)
        - cd flutter; git checkout v0.9.4; cd ..
        - sed -i -n '21{h; d}; 24{p; x;}; p' flutter/packages/flutter_tools/gradle/flutter.gradle

        - export PATH="$PATH":"$HOME/.pub-cache/bin"
        - export PATH=`pwd`/flutter/bin:`pwd`/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter precache
        - flutter doctor -v
        # Wait for emulator to finish startup.
        - ./script/android-wait-for-emulator.sh
        - adb shell input keyevent 82
        - flutter devices
      script: travis_retry flutter -v drive test_driver/main.dart
#    - <<: *integration-test-stage
#      os: osx
#      # use oldest flutter supported version of xcode
#      osx_image: xcode8.0
#      env: running driver on simulator
#      # Run integration tests on ios
#      before_install:
#        - open /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app
#        - brew update
#        - brew install libimobiledevice
#        - brew install ideviceinstaller
#        - brew install ios-deploy
#        - brew install cocoapods || echo 'ignore exit(1)'
#        - brew link --overwrite cocoapods
#        - git clone https://github.com/flutter/flutter.git -b beta
#        - export PATH="$PATH":"$HOME/.pub-cache/bin"
#        - export PATH=`pwd`/flutter/bin:`pwd`/flutter/bin/cache/dart-sdk/bin:$PATH
#        - flutter precache
#        - flutter doctor -v
#        - flutter devices

    - <<: *integration-test-staging
      os: linux
      env:
        - EMULATOR_API_LEVEL=22
        - ANDROID_ABI="google_apis;armeabi-v7a"
#
#    - <<: *integration-test-staging
#      env:
#        - EMULATOR_API_LEVEL=23
#        - ANDROID_ABI="google_apis;armeabi-v7a"
#
#    - <<: *integration-test-staging
#      env:
#        - EMULATOR_API_LEVEL=24
#        - ANDROID_ABI="google_apis;armeabi-v7a"
#
#    - <<: *integration-test-staging
#      env:
#        - EMULATOR_API_LEVEL=24
#        - ANDROID_ABI="google_apis;arm64-v8a"
#
#    - <<: *integration-test-staging
#      env:
#        - EMULATOR_API_LEVEL=24
#        - ANDROID_ABI="google_apis;arm64-v8a"
#
#    - <<: *integration-test-staging
#      env:
#        - EMULATOR_API_LEVEL=25
#        - ANDROID_ABI="google_apis;armeabi-v7a"
#
#    - <<: *integration-test-staging
#      env:
#        - EMULATOR_API_LEVEL=25
#        - ANDROID_ABI="google_apis;arm64-v8a"

    - stage: Ready to deploy
      os: osx
      language: generic
      env: not implemented ðŸ¤“
      script: echo "Deploying to store ..."
